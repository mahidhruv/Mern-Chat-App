{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\VS Code Work\\\\MERN Chat App\\\\frontend\\\\src\\\\Components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport axios from \"axios\";\nimport { Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport ChatLoading from \"./ChatLoading\";\nimport { getSender } from \"../Config/ChatLogics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = () => {\n  _s();\n  const [loggedUser, setLoggedUser] = useState();\n  // const [loggedUser, setLoggedUser] = useState(\n  //   JSON.parse(localStorage.getItem(\"userInfo\"))\n  // );\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    if (userInfo) {\n      setLoggedUser(userInfo);\n    }\n    fetchChats();\n  }, []);\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      console.log(data);\n      setChats(data);\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"top-left\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Helvetica\",\n      display: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(Button, {\n        display: \"flex\",\n        fontSize: {\n          base: \"15px\",\n          md: \"10px\",\n          lg: \"17px\"\n        },\n        alignItems: \"center\",\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          paddingTop: \"3px\",\n          children: \"New Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n          boxSize: \"15px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: \"scroll\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setSelectedChat(chat),\n          cursor: \"pointer\",\n          bg: selectedChat === chat ? \"#00CED1\" : \"#E8E8E8\",\n          color: selectedChat === chat ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.users || \"Chat User\") : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"YQd3AWel/HFwk7lFM1/6tXxZbeA=\", false, function () {\n  return [useToast];\n});\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["React","useEffect","useState","ChatState","axios","Box","Button","Stack","Text","useToast","AddIcon","ChatLoading","getSender","jsxDEV","_jsxDEV","MyChats","_s","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","toast","userInfo","JSON","parse","localStorage","getItem","fetchChats","config","headers","Authorization","token","data","get","console","log","error","title","description","status","duration","isClosable","position","display","base","md","flexDir","alignItems","p","bg","w","borderRadius","borderWidth","children","pb","px","fontSize","fontFamily","justifyContent","lg","gap","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","boxSize","h","overflowY","map","chat","onClick","cursor","color","py","isGroupChat","users","chatName","_id","_c","$RefreshReg$"],"sources":["E:/Programming/VS Code Work/MERN Chat App/frontend/src/Components/MyChats.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport { Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport { getSender } from \"../Config/ChatLogics\";\r\n\r\nconst MyChats = () => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  // const [loggedUser, setLoggedUser] = useState(\r\n  //   JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  // );\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    if (userInfo) {\r\n      setLoggedUser(userInfo);\r\n    }\r\n    fetchChats();\r\n  }, []);\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      console.log(data);\r\n      setChats(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Helvetica\"\r\n        display=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <Button\r\n          display=\"flex\"\r\n          fontSize={{ base: \"15px\", md: \"10px\", lg: \"17px\" }}\r\n          alignItems={\"center\"}\r\n          gap={2}\r\n        >\r\n          <Text paddingTop={\"3px\"}>New Group Chat</Text>\r\n          <AddIcon boxSize=\"15px\" />\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDir={\"column\"}\r\n        p={3}\r\n        bg={\"#F8F8F8\"}\r\n        w={\"100%\"}\r\n        h={\"100%\"}\r\n        borderRadius={\"lg\"}\r\n        overflowY={\"hidden\"}\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY={\"scroll\"}>\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor={\"pointer\"}\r\n                bg={selectedChat === chat ? \"#00CED1\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius={\"lg\"}\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users || \"Chat User\")\r\n                    : chat.chatName}\r\n                </Text>\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}