{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\VS Code Work\\\\MERN Chat App\\\\frontend\\\\src\\\\Components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport axios from \"axios\";\nimport { Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport ChatLoading from \"./ChatLoading\";\nimport { getSender } from \"../Config/ChatLogics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = () => {\n  _s();\n  // const [loggedUser, setLoggedUser] = useState();\n  const [loggedUser, setLoggedUser] = useState(JSON.parse(localStorage.getItem(\"userInfo\")));\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  const toast = useToast();\n  useEffect(() => {\n    // const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    // if (userInfo) {\n    //   setLoggedUser(userInfo);\n    // }\n    fetchChats();\n  }, []);\n\n  // useEffect(() => {\n  //   // Fetch chats when both user and loggedUser are available\n  //   if (user && loggedUser) {\n  //     fetchChats();\n  //   }\n  // }, [user, loggedUser]); // Add both dependencies\n\n  const fetchChats = async () => {\n    try {\n      setLoading(true); // Set loading to true before fetching\n\n      // Validate user token first\n      if (!(user !== null && user !== void 0 && user.token)) {\n        toast({\n          title: \"Authentication Error\",\n          description: \"Please login again\",\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n          position: \"top-left\"\n        });\n        return;\n      }\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n\n      // Validate received data\n      if (!data || !Array.isArray(data)) {\n        throw new Error(\"Invalid data received from server\");\n      }\n\n      // Validate each chat object\n      const validChats = data.filter(chat => {\n        return chat && chat._id && chat.users && Array.isArray(chat.users);\n      });\n      console.log(\"Valid chats:\", validChats);\n      setChats(validChats);\n\n      // console.log(\"Fetched chats:\", data); // Debug log\n      // console.log(\n      //   \"Chat IDs:\",\n      //   data.map((chat) => chat._id)\n      // );\n      // setChats(data);\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"top-left\"\n      });\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // useEffect(() => {\n  //   console.log(\"Current user:\", user);\n  //   console.log(\"Current chats:\", chats);\n  //   if (chats) {\n  //     chats.forEach((chat, index) => {\n  //       console.log(`Chat ${index} _id:`, chat._id);\n  //     });\n  //   }\n  // }, [user, chats]);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Helvetica\",\n      display: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(Button, {\n        display: \"flex\",\n        fontSize: {\n          base: \"17px\",\n          md: \"10px\",\n          lg: \"17px\"\n        }\n        // rightIcon={<AddIcon />}\n        ,\n        gap: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          alignItems: \"center\",\n          size: \"15px\",\n          paddingTop: \"1\",\n          transition: \"transform 0.2s\",\n          _hover: {\n            transform: \"scale(1.1)\"\n          },\n          children: \"New Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n          fontSize: \"15px\",\n          transition: \"transform 0.2s\",\n          _hover: {\n            transform: \"scale(1.1)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"/Mvnm/N6OeSN9t+O9QM75nc9oTo=\", false, function () {\n  return [useToast];\n});\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["React","useEffect","useState","ChatState","axios","Box","Button","Stack","Text","useToast","AddIcon","ChatLoading","getSender","jsxDEV","_jsxDEV","MyChats","_s","loggedUser","setLoggedUser","JSON","parse","localStorage","getItem","selectedChat","setSelectedChat","user","chats","setChats","loading","setLoading","toast","fetchChats","token","title","description","status","duration","isClosable","position","config","headers","Authorization","data","get","Array","isArray","Error","validChats","filter","chat","_id","users","console","log","error","display","base","md","flexDir","alignItems","p","bg","w","borderRadius","borderWidth","children","pb","px","fontSize","fontFamily","justifyContent","lg","gap","size","paddingTop","transition","_hover","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Programming/VS Code Work/MERN Chat App/frontend/src/Components/MyChats.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport { Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport { getSender } from \"../Config/ChatLogics\";\r\n\r\nconst MyChats = () => {\r\n  // const [loggedUser, setLoggedUser] = useState();\r\n  const [loggedUser, setLoggedUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  );\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    // const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    // if (userInfo) {\r\n    //   setLoggedUser(userInfo);\r\n    // }\r\n    fetchChats();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   // Fetch chats when both user and loggedUser are available\r\n  //   if (user && loggedUser) {\r\n  //     fetchChats();\r\n  //   }\r\n  // }, [user, loggedUser]); // Add both dependencies\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      setLoading(true); // Set loading to true before fetching\r\n\r\n      // Validate user token first\r\n      if (!user?.token) {\r\n        toast({\r\n          title: \"Authentication Error\",\r\n          description: \"Please login again\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: \"top-left\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n\r\n      // Validate received data\r\n      if (!data || !Array.isArray(data)) {\r\n        throw new Error(\"Invalid data received from server\");\r\n      }\r\n\r\n      // Validate each chat object\r\n      const validChats = data.filter((chat) => {\r\n        return chat && chat._id && chat.users && Array.isArray(chat.users);\r\n      });\r\n\r\n      console.log(\"Valid chats:\", validChats);\r\n      setChats(validChats);\r\n\r\n      // console.log(\"Fetched chats:\", data); // Debug log\r\n      // console.log(\r\n      //   \"Chat IDs:\",\r\n      //   data.map((chat) => chat._id)\r\n      // );\r\n      // setChats(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n    } finally {\r\n      setLoading(false); // Set loading to false after fetching\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Current user:\", user);\r\n  //   console.log(\"Current chats:\", chats);\r\n  //   if (chats) {\r\n  //     chats.forEach((chat, index) => {\r\n  //       console.log(`Chat ${index} _id:`, chat._id);\r\n  //     });\r\n  //   }\r\n  // }, [user, chats]);\r\n\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth={\"1px\"}\r\n    >\r\n      {/* Header of the Chat */}\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Helvetica\"\r\n        display=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <Button\r\n          display=\"flex\"\r\n          fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n          // rightIcon={<AddIcon />}\r\n          gap={\"2\"}\r\n        >\r\n          <Text\r\n            alignItems=\"center\"\r\n            size={\"15px\"}\r\n            paddingTop={\"1\"}\r\n            transition=\"transform 0.2s\"\r\n            _hover={{ transform: \"scale(1.1)\" }}\r\n          >\r\n            New Group Chat\r\n          </Text>\r\n          <AddIcon\r\n            fontSize=\"15px\"\r\n            transition=\"transform 0.2s\"\r\n            _hover={{ transform: \"scale(1.1)\" }}\r\n          />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}