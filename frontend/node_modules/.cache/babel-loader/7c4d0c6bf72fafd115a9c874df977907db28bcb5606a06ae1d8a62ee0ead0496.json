{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\VS Code Work\\\\MERN Chat App\\\\frontend\\\\src\\\\Pages\\\\Chatpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatpage = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  //   const fetchChats = async () => {\n  //     const response = await axios.get(\"/api/chats\");\n  //     setChats(response.data);\n  //   };\n  const fetchChats = async () => {\n    try {\n      const response = await axios.get(\"/api/chats\");\n      console.log(\"API response:\", response.data); // Log the entire response\n      if (Array.isArray(response.data.data)) {\n        setChats(response.data.data);\n      } else {\n        console.error(\"Received data is not an array:\", response.data.data);\n        setChats([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n      setChats([]);\n    }\n  };\n  useEffect(() => {\n    fetchChats();\n  }, []);\n\n  //   return (\n  //     <div>\n  //       {chats.map((chat) => (\n  //         <div>{chat}</div>\n  //       ))}\n  //     </div>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chats && chats.length > 0 ? chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chat.chatName || chat.name || \"Unnamed Chat\"\n    }, chat._id || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No chats available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatpage, \"vytB8QcpLWFeZXbb4G/4rqAt8MY=\");\n_c = Chatpage;\nexport default Chatpage;\nvar _c;\n$RefreshReg$(_c, \"Chatpage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Chatpage","_s","chats","setChats","fetchChats","response","get","console","log","data","Array","isArray","error","children","length","map","chat","index","chatName","name","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Programming/VS Code Work/MERN Chat App/frontend/src/Pages/Chatpage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chatpage = () => {\r\n  const [chats, setChats] = useState([]);\r\n  //   const fetchChats = async () => {\r\n  //     const response = await axios.get(\"/api/chats\");\r\n  //     setChats(response.data);\r\n  //   };\r\n  const fetchChats = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/chats\");\r\n      console.log(\"API response:\", response.data); // Log the entire response\r\n      if (Array.isArray(response.data.data)) {\r\n        setChats(response.data.data);\r\n      } else {\r\n        console.error(\"Received data is not an array:\", response.data.data);\r\n        setChats([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n      setChats([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, []);\r\n\r\n  //   return (\r\n  //     <div>\r\n  //       {chats.map((chat) => (\r\n  //         <div>{chat}</div>\r\n  //       ))}\r\n  //     </div>\r\n  //   );\r\n  return (\r\n    <div>\r\n      {chats && chats.length > 0 ? (\r\n        chats.map((chat, index) => (\r\n          <div key={chat._id || index}>\r\n            {chat.chatName || chat.name || \"Unnamed Chat\"}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No chats available</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Chatpage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;EACA;EACA;EACA,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,YAAY,CAAC;MAC9CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC7C,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,EAAE;QACrCN,QAAQ,CAACE,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;MAC9B,CAAC,MAAM;QACLF,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEP,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;QACnEN,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CT,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEL,OAAA;IAAAc,QAAA,EACGX,KAAK,IAAIA,KAAK,CAACY,MAAM,GAAG,CAAC,GACxBZ,KAAK,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBlB,OAAA;MAAAc,QAAA,EACGG,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACG,IAAI,IAAI;IAAc,GADrCH,IAAI,CAACI,GAAG,IAAIH,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB,CACN,CAAC,gBAEFzB,OAAA;MAAAc,QAAA,EAAG;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAACvB,EAAA,CA/CID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}