{"ast":null,"code":"// export const getSender = (loggedUser, users) => {\n//   return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n// };\n\n// In your getSender function\nconst getSender = (loggedUser, users) => {\n  // Add safety checks\n  if (!loggedUser || !users || !Array.isArray(users) || users.length < 2) {\n    return \"Loading...\"; // or return some default value\n  }\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\n// Where you're using getSender (likely in SingleChat component)\n{\n  chat && chat.users && chat.users.length > 0 ? getSender(loggedUser, chat.users) : \"Loading chat...\";\n}","map":{"version":3,"names":["getSender","loggedUser","users","Array","isArray","length","_id","name","chat"],"sources":["E:/Programming/VS Code Work/MERN Chat App/frontend/src/Config/ChatLogics.js"],"sourcesContent":["// export const getSender = (loggedUser, users) => {\r\n//   return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n// };\r\n\r\n// In your getSender function\r\nconst getSender = (loggedUser, users) => {\r\n  // Add safety checks\r\n  if (!loggedUser || !users || !Array.isArray(users) || users.length < 2) {\r\n    return \"Loading...\"; // or return some default value\r\n  }\r\n  \r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\n\r\n// Where you're using getSender (likely in SingleChat component)\r\n{chat && chat.users && chat.users.length > 0 ? (\r\n  getSender(loggedUser, chat.users)\r\n) : (\r\n  \"Loading chat...\"\r\n)}\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,MAAMA,SAAS,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;EACvC;EACA,IAAI,CAACD,UAAU,IAAI,CAACC,KAAK,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;IACtE,OAAO,YAAY,CAAC,CAAC;EACvB;EAEA,OAAOH,KAAK,CAAC,CAAC,CAAC,CAACI,GAAG,KAAKL,UAAU,CAACK,GAAG,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACK,IAAI,GAAGL,KAAK,CAAC,CAAC,CAAC,CAACK,IAAI;AACxE,CAAC;;AAED;AACA;EAACC,IAAI,IAAIA,IAAI,CAACN,KAAK,IAAIM,IAAI,CAACN,KAAK,CAACG,MAAM,GAAG,CAAC,GAC1CL,SAAS,CAACC,UAAU,EAAEO,IAAI,CAACN,KAAK,CAAC,GAEjC,iBACD;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}