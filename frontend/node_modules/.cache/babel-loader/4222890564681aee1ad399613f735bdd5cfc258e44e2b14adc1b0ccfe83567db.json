{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\VS Code Work\\\\MERN Chat App\\\\frontend\\\\src\\\\Pages\\\\Chatpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { Box } from \"@chakra-ui/react\";\nimport SideDrawer from \"../Components/Miscellaneous/SideDrawer\";\nimport MyChats from \"../Components/MyChats\";\nimport ChatBox from \"../Components/ChatBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatpage = () => {\n  _s();\n  // user state from context api\n  const {\n    user,\n    setUser\n  } = ChatState();\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    if (userInfo) {\n      setUser(userInfo);\n    }\n  }, [setUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: [user && /*#__PURE__*/_jsxDEV(SideDrawer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n      height: \"91.5vh\",\n      padding: \"10px\",\n      children: [user && /*#__PURE__*/_jsxDEV(MyChats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this), user && /*#__PURE__*/_jsxDEV(ChatBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatpage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Chatpage;\nexport default Chatpage;\n\n// initial unused code of Chat Page\n\n// const Chatpage = () => {\n//   const [chats, setChats] = useState([]);\n//     // const fetchChats = async () => {\n//     //   const response = await axios.get(\"/api/chats\");\n//     //   setChats(response.data.data);\n//     //   console.log(\"API response:\", response.data); // Log the entire response\n//     // };\n//   const fetchChats = async () => {\n//     try {\n//       const response = await axios.get(\"/api/chats\");\n//       console.log(\"API response:\", response.data); // Log the entire response\n//       if (Array.isArray(response.data.data)) {\n//         setChats(response.data.data);\n//       } else {\n//         console.error(\"Received data is not an array:\", response.data.data);\n//         setChats([]);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching chats:\", error);\n//       setChats([]);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchChats();\n//   }, []);\n\n//     // return (\n//     //   <div>\n//     //     {chats.map((chat) => (\n//     //       <div key={chat._id}>{chat.chatName}</div>\n//     //     ))}\n//     //   </div>\n//     // );\n//   return (\n//     <div>\n//       {chats && chats.length > 0 ? (\n//         chats.map((chat, index) => (\n//           <div key={chat._id || index}>\n//             {chat.chatName || chat.name || \"Unnamed Chat\"}\n//           </div>\n//         ))\n//       ) : (\n//         <p>No chats available</p>\n//       )}\n//     </div>\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"Chatpage\");","map":{"version":3,"names":["React","useEffect","axios","ChatState","Box","SideDrawer","MyChats","ChatBox","jsxDEV","_jsxDEV","Chatpage","_s","user","setUser","userInfo","JSON","parse","localStorage","getItem","style","width","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","height","padding","_c","$RefreshReg$"],"sources":["E:/Programming/VS Code Work/MERN Chat App/frontend/src/Pages/Chatpage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport SideDrawer from \"../Components/Miscellaneous/SideDrawer\";\r\nimport MyChats from \"../Components/MyChats\";\r\nimport ChatBox from \"../Components/ChatBox\";\r\n\r\nconst Chatpage = () => {\r\n  // user state from context api\r\n  const { user, setUser } = ChatState();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    if (userInfo) {\r\n      setUser(userInfo);\r\n    }\r\n  }, [setUser]);\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      {user && <SideDrawer />}\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent={\"space-between\"}\r\n        width={\"100%\"}\r\n        height={\"91.5vh\"}\r\n        padding={\"10px\"}\r\n      >\r\n        {user && <MyChats />}\r\n        {user && <ChatBox />}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n\r\n// initial unused code of Chat Page\r\n\r\n// const Chatpage = () => {\r\n//   const [chats, setChats] = useState([]);\r\n//     // const fetchChats = async () => {\r\n//     //   const response = await axios.get(\"/api/chats\");\r\n//     //   setChats(response.data.data);\r\n//     //   console.log(\"API response:\", response.data); // Log the entire response\r\n//     // };\r\n//   const fetchChats = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"/api/chats\");\r\n//       console.log(\"API response:\", response.data); // Log the entire response\r\n//       if (Array.isArray(response.data.data)) {\r\n//         setChats(response.data.data);\r\n//       } else {\r\n//         console.error(\"Received data is not an array:\", response.data.data);\r\n//         setChats([]);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching chats:\", error);\r\n//       setChats([]);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchChats();\r\n//   }, []);\r\n\r\n//     // return (\r\n//     //   <div>\r\n//     //     {chats.map((chat) => (\r\n//     //       <div key={chat._id}>{chat.chatName}</div>\r\n//     //     ))}\r\n//     //   </div>\r\n//     // );\r\n//   return (\r\n//     <div>\r\n//       {chats && chats.length > 0 ? (\r\n//         chats.map((chat, index) => (\r\n//           <div key={chat._id || index}>\r\n//             {chat.chatName || chat.name || \"Unnamed Chat\"}\r\n//           </div>\r\n//         ))\r\n//       ) : (\r\n//         <p>No chats available</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EAErCF,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC7D,IAAIJ,QAAQ,EAAE;MACZD,OAAO,CAACC,QAAQ,CAAC;IACnB;EACF,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAGb,oBACEJ,OAAA;IACEU,KAAK,EAAE;MACLC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,GAEDT,IAAI,iBAAIH,OAAA,CAACJ,UAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBhB,OAAA,CAACL,GAAG;MACFsB,OAAO,EAAE,MAAO;MAChBC,cAAc,EAAE,eAAgB;MAChCP,KAAK,EAAE,MAAO;MACdQ,MAAM,EAAE,QAAS;MACjBC,OAAO,EAAE,MAAO;MAAAR,QAAA,GAEfT,IAAI,iBAAIH,OAAA,CAACH,OAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnBb,IAAI,iBAAIH,OAAA,CAACF,OAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA/BID,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAiCd,eAAeA,QAAQ;;AAEvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}