{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\VS Code Work\\\\MERN Chat App\\\\frontend\\\\src\\\\Components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ChatState } from '../Context/ChatProvider';\nimport { axios } from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = () => {\n  _s();\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chats\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"MyChats\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"/tYE9PrFP1V4tgY/RXXwJnpzOrE=\", true);\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["React","useState","ChatState","axios","jsxDEV","_jsxDEV","MyChats","_s","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","toast","useToast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Programming/VS Code Work/MERN Chat App/frontend/src/Components/MyChats.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { ChatState } from '../Context/ChatProvider';\r\nimport { axios } from 'axios';\r\n\r\nconst MyChats = () => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  const {selectedChat, setSelectedChat, user, chats, setChats} = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\"/api/chats\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>MyChats</div>\r\n  )\r\n}\r\n\r\nexport default MyChats"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,KAAK,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC9C,MAAM;IAACS,YAAY;IAAEC,eAAe;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAE1E,MAAMa,KAAK,GAAGC,QAAQ,CAAC,CAAC;EAExB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUR,IAAI,CAACS,KAAK;QACrC;MACF,CAAC;MACD,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,YAAY,EAAEL,MAAM,CAAC;MACtDJ,QAAQ,CAACQ,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdT,KAAK,CAAC;QACJU,KAAK,EAAE,gBAAgB;QACvBC,WAAW,EAAE,0BAA0B;QACvCC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,IAAI;QAChBC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;EACD,oBACEzB,OAAA;IAAA0B,QAAA,EAAK;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEtB,CAAC;AAAA5B,EAAA,CA7BKD,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AA+Bb,eAAeA,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}