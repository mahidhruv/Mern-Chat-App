{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\VS Code Work\\\\MERN Chat App\\\\frontend\\\\src\\\\Components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport axios from \"axios\";\nimport { AlertDialog, AlertDialogBody, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogOverlay, Box, Button, Spinner, Stack, Text, useToast } from \"@chakra-ui/react\";\nimport { AddIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport ChatLoading from \"./ChatLoading\";\nimport { getSender } from \"../Config/ChatLogics\";\nimport GroupChatModal from \"./Miscellaneous/GroupChatModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = () => {\n  _s();\n  // const [loggedUser, setLoggedUser] = useState();\n  const [loggedUser, setLoggedUser] = useState(JSON.parse(localStorage.getItem(\"userInfo\")));\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Deleting the chat\n  const [isDeleteAlertOpen, setIsDeleteAlertOpen] = useState(false);\n  const [chatToDelete, setChatToDelete] = useState(null);\n  const cancelRef = useRef();\n\n  // NEW: Add this state for backup\n  const [deletedChatBackup, setDeletedChatBackup] = useState(null);\n  const toast = useToast();\n  const fetchChats = async () => {\n    // CHANGE : Added early return for better performance\n    if (!(user !== null && user !== void 0 && user.token)) return;\n\n    // setIsLoading(true); // Changed\n    try {\n      // Changed\n      if (!user || !user.token) {\n        console.log(\"User not found or token missing\");\n        return;\n      }\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n\n      // console.log(\"Fetched chats:\", data); // Debug log\n      // console.log(\n      //   \"Chat IDs:\",\n      //   data.map((chat) => chat._id)\n      // );\n      setChats(data);\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"top-left\"\n      });\n    } finally {\n      // CHANGED : Reset loading state\n      // setIsLoading(false);\n    }\n  };\n\n  // Delete handler with new alert dialog box\n  const handleDeleteClick = chat => {\n    setChatToDelete(chat);\n    setIsDeleteAlertOpen(true);\n  };\n\n  // NEW: Add this function for handling undo\n  const handleUndoDelete = () => {\n    if (!deletedChatBackup) return;\n\n    // Restore the chat to its original position\n    const newChats = [...chats];\n    newChats.splice(deletedChatBackup.index, 0, deletedChatBackup.chat);\n    setChats(newChats);\n\n    // Clear the backup\n    setDeletedChatBackup(null);\n  };\n\n  // CHANGED: Updated delete confirmation handler\n  const handleDeleteConfirm = async () => {\n    if (!chatToDelete) return;\n\n    // NEW: Backup the chat and its index before deletion\n    const chatBackup = chatToDelete;\n    const chatIndex = chats.findIndex(c => c._id === chatToDelete._id);\n    setDeletedChatBackup({\n      chat: chatBackup,\n      index: chatIndex\n    });\n\n    // Remove from UI immediately\n    // setChats(chats.filter((c) => c._id !== chatToDelete._id));\n\n    if ((selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat._id) === chatToDelete._id) {\n      setSelectedChat(null);\n    }\n\n    // NEW: Show toast with undo button\n    toast({\n      title: \"Chat Deleted\",\n      description: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          mb: 2,\n          children: \"Chat has been deleted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          colorScheme: \"blue\",\n          onClick: () => handleUndoDelete(),\n          children: \"UNDO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this),\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top\"\n    });\n\n    // NEW: Delayed backend deletion\n    const timeoutId = setTimeout(async () => {\n      if (deletedChatBackup) {\n        try {\n          const config = {\n            headers: {\n              \"Content-type\": \"application/json\",\n              Authorization: `Bearer ${user.token}`\n            }\n          };\n          await axios.delete(\"/api/chat/delete\", {\n            headers: config.headers,\n            data: {\n              chatId: chatBackup._id\n            }\n          });\n          setDeletedChatBackup(null);\n        } catch (error) {\n          var _error$response, _error$response$data;\n          // If backend deletion fails, restore the chat\n          handleUndoDelete();\n          toast({\n            title: \"Error Deleting Chat\",\n            description: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong\",\n            status: \"error\",\n            duration: 3000,\n            isClosable: true,\n            position: \"top\"\n          });\n        }\n      }\n    }, 5000); // 5 seconds delay\n\n    setIsDeleteAlertOpen(false);\n    setChatToDelete(null);\n\n    // Cleanup timeout\n    return () => clearTimeout(timeoutId);\n  };\n\n  // Delete handler with only new dialog confirm box\n  // const handleDeleteConfirm = async () => {\n  //   if (!chatToDelete) return;\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         \"Content-type\": \"application/json\",\n  //         Authorization: `Bearer ${user.token}`,\n  //       },\n  //     };\n\n  //     await axios.delete(\"/api/chat/delete\", {\n  //       headers: config.headers,\n  //       data: { chatId: chatToDelete._id },\n  //     });\n\n  //     setChats(chats.filter((c) => c._id !== chatToDelete._id));\n\n  //     if (selectedChat?._id === chatToDelete._id) {\n  //       setSelectedChat(null);\n  //     }\n\n  //     toast({\n  //       title: \"Chat Deleted Successfully\",\n  //       status: \"success\",\n  //       duration: 3000,\n  //       isClosable: true,\n  //       position: \"top\",\n  //     });\n  //   } catch (error) {\n  //     toast({\n  //       title: \"Error Deleting Chat\",\n  //       description: error.response?.data?.message || \"Something went wrong\",\n  //       status: \"error\",\n  //       duration: 3000,\n  //       isClosable: true,\n  //       position: \"top\",\n  //     });\n  //   } finally {\n  //     // NEW: Clean up states\n  //     setIsDeleteAlertOpen(false);\n  //     setChatToDelete(null);\n  //   }\n  // };\n\n  // Old Delete handler -> working fine with windows default alert\n  // const handleDeleteChat = async (chatId) => {\n  //   // Show confirmation dialog\n  //   if (window.confirm(\"Chat will be deleted permanently. Are you sure?\")) {\n  //     try {\n  //       const config = {\n  //         headers: {\n  //           \"Content-type\": \"application/json\",\n  //           Authorization: `Bearer ${user.token}`,\n  //         },\n  //       };\n\n  //       await axios.delete(\"/api/chat/delete\", {\n  //         headers: config.headers,\n  //         data: { chatId: chatId },\n  //       });\n\n  //       // Remove chat from the list\n  //       setChats(chats.filter((c) => c._id !== chatId));\n\n  //       // If deleted chat was selected, unselect it\n  //       if (selectedChat?._id === chatId) {\n  //         setSelectedChat(null);\n  //       }\n\n  //       toast({\n  //         title: \"Chat Deleted Successfully\",\n  //         status: \"success\",\n  //         duration: 3000,\n  //         isClosable: true,\n  //         position: \"top\",\n  //       });\n  //     } catch (error) {\n  //       toast({\n  //         title: \"Error Deleting Chat\",\n  //         description: error.response?.data?.message || \"Something went wrong\",\n  //         status: \"error\",\n  //         duration: 3000,\n  //         isClosable: true,\n  //         position: \"top\",\n  //       });\n  //     }\n  //   }\n  // };\n\n  useEffect(() => {\n    // const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    // if (userInfo) {\n    //   setLoggedUser(userInfo);\n    // }\n    // changed this so that it will load smoothly after refreshing the page\n    setIsLoading(true);\n    fetchChats().then(() => {\n      setIsLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching chats:\", error);\n      setIsLoading(false);\n    });\n  }, [user, selectedChat]); // Added dependencies\n\n  // // CHANGED: Added debug useEffect\n  // useEffect(() => {\n  //   // console.log(\"Selected Chat changed:\", selectedChat);\n  //   // console.log(\"Current chats:\", chats);\n  // }, [selectedChat, chats]);\n\n  // CHANGED: Added explicit chat selection handler\n  const handleChatSelect = chat => {\n    // console.log(\"Selecting chat:\", chat);\n    setSelectedChat(chat);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Helvetica\",\n      display: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(GroupChatModal, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          display: \"flex\",\n          fontSize: {\n            base: \"17px\",\n            md: \"10px\",\n            lg: \"17px\"\n          }\n          // rightIcon={<AddIcon />}\n          ,\n          gap: \"2\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            alignItems: \"center\",\n            size: \"15px\",\n            paddingTop: \"1\",\n            children: \"New Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n            fontSize: \"15px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        gap: 3,\n        p: 6,\n        bg: \"white\",\n        borderRadius: \"xl\",\n        shadow: \"sm\",\n        minW: \"200px\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-arrows-rotate fa-spin\",\n          style: {\n            fontSize: \"2rem\",\n            color: \"#3182ce\",\n            animationDuration: \"3s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"gray.700\",\n          fontSize: \"lg\",\n          fontWeight: \"semibold\",\n          children: \"Loading Chats...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this) :\n      // <ChatLoading />\n      (chats === null || chats === void 0 ? void 0 : chats.length) > 0 ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: \"scroll\",\n        children: chats.map((chat, index) => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => handleChatSelect(chat),\n          cursor: \"pointer\"\n          // added id comparision so that chat remain selected\n          ,\n          bg: (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat._id) === chat._id ? \"#00CED1\" : \"#E8E8E8\",\n          color: (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat._id) === chat._id ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          // For delete button\n          position: \"relative\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          _hover: {\n            \"& .delete-button\": {\n              opacity: 1\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat && loggedUser && chat.users ? getSender(loggedUser, chat.users) : chat.chatName || \"Unnamed Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"delete-button\",\n            opacity: 0,\n            transition: \"opacity 0.2s\",\n            size: \"sm\",\n            colorScheme: \"red\",\n            onClick: e => {\n              e.stopPropagation();\n              handleDeleteClick(chat);\n            },\n            ml: 2 // Add margin to the left of button\n            ,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              boxSize: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n            isOpen: isDeleteAlertOpen,\n            leastDestructiveRef: cancelRef,\n            onClose: () => setIsDeleteAlertOpen(false),\n            children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n              children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n                children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n                  fontSize: \"lg\",\n                  fontWeight: \"bold\",\n                  children: \"Delete Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n                  children: \"Chat will be deleted permanently. Are you sure?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    ref: cancelRef,\n                    onClick: () => setIsDeleteAlertOpen(false),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    colorScheme: \"red\",\n                    onClick: handleDeleteConfirm,\n                    ml: 3,\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this)]\n        }, `${chat._id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // CHANGE : Added empty state message\n      _jsxDEV(Text, {\n        textAlign: \"center\",\n        color: \"gray.500\",\n        children: \"No chats available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"NCPrrtGMAfg5Dg/c5oc5eV2ZFGw=\", false, function () {\n  return [useToast];\n});\n_c = MyChats;\nexport default MyChats;\n// CHANGE 8: Export with React.memo for performance\n// export default React.memo(MyChats);\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatState","axios","AlertDialog","AlertDialogBody","AlertDialogContent","AlertDialogFooter","AlertDialogHeader","AlertDialogOverlay","Box","Button","Spinner","Stack","Text","useToast","AddIcon","CloseIcon","ChatLoading","getSender","GroupChatModal","jsxDEV","_jsxDEV","MyChats","_s","loggedUser","setLoggedUser","JSON","parse","localStorage","getItem","selectedChat","setSelectedChat","user","chats","setChats","isLoading","setIsLoading","isDeleteAlertOpen","setIsDeleteAlertOpen","chatToDelete","setChatToDelete","cancelRef","deletedChatBackup","setDeletedChatBackup","toast","fetchChats","token","console","log","config","headers","Authorization","data","get","error","title","description","status","duration","isClosable","position","handleDeleteClick","chat","handleUndoDelete","newChats","splice","index","handleDeleteConfirm","chatBackup","chatIndex","findIndex","c","_id","children","mb","fileName","_jsxFileName","lineNumber","columnNumber","size","colorScheme","onClick","timeoutId","setTimeout","delete","chatId","_error$response","_error$response$data","response","message","clearTimeout","then","catch","handleChatSelect","display","base","md","flexDir","alignItems","p","bg","w","borderRadius","borderWidth","pb","px","fontSize","fontFamily","justifyContent","lg","gap","paddingTop","h","overflowY","flexDirection","shadow","minW","className","style","color","animationDuration","fontWeight","length","map","cursor","py","_hover","opacity","isGroupChat","users","chatName","transition","e","stopPropagation","ml","boxSize","isOpen","leastDestructiveRef","onClose","ref","textAlign","_c","$RefreshReg$"],"sources":["E:/Programming/VS Code Work/MERN Chat App/frontend/src/Components/MyChats.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogContent,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogOverlay,\r\n  Box,\r\n  Button,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon, CloseIcon } from \"@chakra-ui/icons\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport { getSender } from \"../Config/ChatLogics\";\r\nimport GroupChatModal from \"./Miscellaneous/GroupChatModal\";\r\n\r\nconst MyChats = () => {\r\n  // const [loggedUser, setLoggedUser] = useState();\r\n  const [loggedUser, setLoggedUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  );\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Deleting the chat\r\n  const [isDeleteAlertOpen, setIsDeleteAlertOpen] = useState(false);\r\n  const [chatToDelete, setChatToDelete] = useState(null);\r\n  const cancelRef = useRef();\r\n\r\n  // NEW: Add this state for backup\r\n  const [deletedChatBackup, setDeletedChatBackup] = useState(null);\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // CHANGE : Added early return for better performance\r\n    if (!user?.token) return;\r\n\r\n    // setIsLoading(true); // Changed\r\n    try {\r\n      // Changed\r\n      if (!user || !user.token) {\r\n        console.log(\"User not found or token missing\");\r\n        return;\r\n      }\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n\r\n      // console.log(\"Fetched chats:\", data); // Debug log\r\n      // console.log(\r\n      //   \"Chat IDs:\",\r\n      //   data.map((chat) => chat._id)\r\n      // );\r\n      setChats(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n    } finally {\r\n      // CHANGED : Reset loading state\r\n      // setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete handler with new alert dialog box\r\n  const handleDeleteClick = (chat) => {\r\n    setChatToDelete(chat);\r\n    setIsDeleteAlertOpen(true);\r\n  };\r\n\r\n  // NEW: Add this function for handling undo\r\n  const handleUndoDelete = () => {\r\n    if (!deletedChatBackup) return;\r\n\r\n    // Restore the chat to its original position\r\n    const newChats = [...chats];\r\n    newChats.splice(deletedChatBackup.index, 0, deletedChatBackup.chat);\r\n    setChats(newChats);\r\n\r\n    // Clear the backup\r\n    setDeletedChatBackup(null);\r\n  };\r\n\r\n  // CHANGED: Updated delete confirmation handler\r\n  const handleDeleteConfirm = async () => {\r\n    if (!chatToDelete) return;\r\n\r\n    // NEW: Backup the chat and its index before deletion\r\n    const chatBackup = chatToDelete;\r\n    const chatIndex = chats.findIndex((c) => c._id === chatToDelete._id);\r\n    setDeletedChatBackup({ chat: chatBackup, index: chatIndex });\r\n\r\n    // Remove from UI immediately\r\n    // setChats(chats.filter((c) => c._id !== chatToDelete._id));\r\n\r\n    if (selectedChat?._id === chatToDelete._id) {\r\n      setSelectedChat(null);\r\n    }\r\n\r\n    // NEW: Show toast with undo button\r\n    toast({\r\n      title: \"Chat Deleted\",\r\n      description: (\r\n        <Box>\r\n          <Text mb={2}>Chat has been deleted</Text>\r\n          <Button\r\n            size=\"sm\"\r\n            colorScheme=\"blue\"\r\n            onClick={() => handleUndoDelete()}\r\n          >\r\n            UNDO\r\n          </Button>\r\n        </Box>\r\n      ),\r\n      status: \"success\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n      position: \"top\",\r\n    });\r\n\r\n    // NEW: Delayed backend deletion\r\n    const timeoutId = setTimeout(async () => {\r\n      if (deletedChatBackup) {\r\n        try {\r\n          const config = {\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          };\r\n\r\n          await axios.delete(\"/api/chat/delete\", {\r\n            headers: config.headers,\r\n            data: { chatId: chatBackup._id },\r\n          });\r\n\r\n          setDeletedChatBackup(null);\r\n        } catch (error) {\r\n          // If backend deletion fails, restore the chat\r\n          handleUndoDelete();\r\n          toast({\r\n            title: \"Error Deleting Chat\",\r\n            description:\r\n              error.response?.data?.message || \"Something went wrong\",\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n            position: \"top\",\r\n          });\r\n        }\r\n      }\r\n    }, 5000); // 5 seconds delay\r\n\r\n    setIsDeleteAlertOpen(false);\r\n    setChatToDelete(null);\r\n\r\n    // Cleanup timeout\r\n    return () => clearTimeout(timeoutId);\r\n  };\r\n\r\n  // Delete handler with only new dialog confirm box\r\n  // const handleDeleteConfirm = async () => {\r\n  //   if (!chatToDelete) return;\r\n\r\n  //   try {\r\n  //     const config = {\r\n  //       headers: {\r\n  //         \"Content-type\": \"application/json\",\r\n  //         Authorization: `Bearer ${user.token}`,\r\n  //       },\r\n  //     };\r\n\r\n  //     await axios.delete(\"/api/chat/delete\", {\r\n  //       headers: config.headers,\r\n  //       data: { chatId: chatToDelete._id },\r\n  //     });\r\n\r\n  //     setChats(chats.filter((c) => c._id !== chatToDelete._id));\r\n\r\n  //     if (selectedChat?._id === chatToDelete._id) {\r\n  //       setSelectedChat(null);\r\n  //     }\r\n\r\n  //     toast({\r\n  //       title: \"Chat Deleted Successfully\",\r\n  //       status: \"success\",\r\n  //       duration: 3000,\r\n  //       isClosable: true,\r\n  //       position: \"top\",\r\n  //     });\r\n  //   } catch (error) {\r\n  //     toast({\r\n  //       title: \"Error Deleting Chat\",\r\n  //       description: error.response?.data?.message || \"Something went wrong\",\r\n  //       status: \"error\",\r\n  //       duration: 3000,\r\n  //       isClosable: true,\r\n  //       position: \"top\",\r\n  //     });\r\n  //   } finally {\r\n  //     // NEW: Clean up states\r\n  //     setIsDeleteAlertOpen(false);\r\n  //     setChatToDelete(null);\r\n  //   }\r\n  // };\r\n\r\n  // Old Delete handler -> working fine with windows default alert\r\n  // const handleDeleteChat = async (chatId) => {\r\n  //   // Show confirmation dialog\r\n  //   if (window.confirm(\"Chat will be deleted permanently. Are you sure?\")) {\r\n  //     try {\r\n  //       const config = {\r\n  //         headers: {\r\n  //           \"Content-type\": \"application/json\",\r\n  //           Authorization: `Bearer ${user.token}`,\r\n  //         },\r\n  //       };\r\n\r\n  //       await axios.delete(\"/api/chat/delete\", {\r\n  //         headers: config.headers,\r\n  //         data: { chatId: chatId },\r\n  //       });\r\n\r\n  //       // Remove chat from the list\r\n  //       setChats(chats.filter((c) => c._id !== chatId));\r\n\r\n  //       // If deleted chat was selected, unselect it\r\n  //       if (selectedChat?._id === chatId) {\r\n  //         setSelectedChat(null);\r\n  //       }\r\n\r\n  //       toast({\r\n  //         title: \"Chat Deleted Successfully\",\r\n  //         status: \"success\",\r\n  //         duration: 3000,\r\n  //         isClosable: true,\r\n  //         position: \"top\",\r\n  //       });\r\n  //     } catch (error) {\r\n  //       toast({\r\n  //         title: \"Error Deleting Chat\",\r\n  //         description: error.response?.data?.message || \"Something went wrong\",\r\n  //         status: \"error\",\r\n  //         duration: 3000,\r\n  //         isClosable: true,\r\n  //         position: \"top\",\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    // if (userInfo) {\r\n    //   setLoggedUser(userInfo);\r\n    // }\r\n    // changed this so that it will load smoothly after refreshing the page\r\n    setIsLoading(true);\r\n    fetchChats()\r\n      .then(() => {\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching chats:\", error);\r\n        setIsLoading(false);\r\n      });\r\n  }, [user, selectedChat]); // Added dependencies\r\n\r\n  // // CHANGED: Added debug useEffect\r\n  // useEffect(() => {\r\n  //   // console.log(\"Selected Chat changed:\", selectedChat);\r\n  //   // console.log(\"Current chats:\", chats);\r\n  // }, [selectedChat, chats]);\r\n\r\n  // CHANGED: Added explicit chat selection handler\r\n  const handleChatSelect = (chat) => {\r\n    // console.log(\"Selecting chat:\", chat);\r\n    setSelectedChat(chat);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth={\"1px\"}\r\n    >\r\n      {/* Header of the Chat */}\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Helvetica\"\r\n        display=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            display=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            // rightIcon={<AddIcon />}\r\n            gap={\"2\"}\r\n          >\r\n            <Text alignItems=\"center\" size={\"15px\"} paddingTop={\"1\"}>\r\n              New Group Chat\r\n            </Text>\r\n            <AddIcon fontSize=\"15px\" />\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      {/* Render all the chats */}\r\n      <Box\r\n        display=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {/* CHANGE : Improved conditional rendering with loading state */}\r\n        {isLoading ? (\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            gap={3}\r\n            p={6}\r\n            bg=\"white\"\r\n            borderRadius=\"xl\"\r\n            shadow=\"sm\"\r\n            minW=\"200px\"\r\n          >\r\n            <i\r\n              className=\"fa-solid fa-arrows-rotate fa-spin\"\r\n              style={{\r\n                fontSize: \"2rem\",\r\n                color: \"#3182ce\",\r\n                animationDuration: \"3s\",\r\n              }}\r\n            />\r\n            <Text color=\"gray.700\" fontSize=\"lg\" fontWeight=\"semibold\">\r\n              Loading Chats...\r\n            </Text>\r\n          </Box>\r\n        ) : // <ChatLoading />\r\n        chats?.length > 0 ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat, index) => (\r\n              <Box\r\n                onClick={() => handleChatSelect(chat)}\r\n                cursor=\"pointer\"\r\n                // added id comparision so that chat remain selected\r\n                bg={selectedChat?._id === chat._id ? \"#00CED1\" : \"#E8E8E8\"}\r\n                color={selectedChat?._id === chat._id ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={`${chat._id}-${index}`}\r\n                // For delete button\r\n                position=\"relative\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                _hover={{\r\n                  \"& .delete-button\": {\r\n                    opacity: 1,\r\n                  },\r\n                }}\r\n              >\r\n                {/* CHANGE : Optimized chat name rendering with null checks */}\r\n                <Text>\r\n                  {!chat.isGroupChat && loggedUser && chat.users\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName || \"Unnamed Chat\"}\r\n                </Text>\r\n                {/* For deleting the chat */}\r\n                <Button\r\n                  className=\"delete-button\"\r\n                  opacity={0}\r\n                  transition=\"opacity 0.2s\"\r\n                  size=\"sm\"\r\n                  colorScheme=\"red\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleDeleteClick(chat);\r\n                  }}\r\n                  ml={2} // Add margin to the left of button\r\n                >\r\n                  <CloseIcon boxSize=\"3\" />\r\n                </Button>\r\n                {/* NEW: Add this AlertDialog component */}\r\n                <AlertDialog\r\n                  isOpen={isDeleteAlertOpen}\r\n                  leastDestructiveRef={cancelRef}\r\n                  onClose={() => setIsDeleteAlertOpen(false)}\r\n                >\r\n                  <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                      <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                        Delete Chat\r\n                      </AlertDialogHeader>\r\n\r\n                      <AlertDialogBody>\r\n                        Chat will be deleted permanently. Are you sure?\r\n                      </AlertDialogBody>\r\n\r\n                      <AlertDialogFooter>\r\n                        <Button\r\n                          ref={cancelRef}\r\n                          onClick={() => setIsDeleteAlertOpen(false)}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          colorScheme=\"red\"\r\n                          onClick={handleDeleteConfirm}\r\n                          ml={3}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                  </AlertDialogOverlay>\r\n                </AlertDialog>\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          // CHANGE : Added empty state message\r\n          <Text textAlign=\"center\" color=\"gray.500\">\r\n            No chats available\r\n          </Text>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n// CHANGE 8: Export with React.memo for performance\r\n// export default React.memo(MyChats);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,WAAW,EACXC,eAAe,EACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,GAAG,EACHC,MAAM,EACNC,OAAO,EACPC,KAAK,EACLC,IAAI,EACJC,QAAQ,QACH,kBAAkB;AACzB,SAASC,OAAO,EAAEC,SAAS,QAAQ,kBAAkB;AACrD,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,OAAOC,cAAc,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAC1C0B,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC7C,CAAC;EACD,MAAM;IAAEC,YAAY;IAAEC,eAAe;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGjC,SAAS,CAAC,CAAC;EAE5E,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAM,CAACqC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMyC,SAAS,GAAG1C,MAAM,CAAC,CAAC;;EAE1B;EACA,MAAM,CAAC2C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAM4C,KAAK,GAAG9B,QAAQ,CAAC,CAAC;EAExB,MAAM+B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA,IAAI,EAACb,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEc,KAAK,GAAE;;IAElB;IACA,IAAI;MACF;MACA,IAAI,CAACd,IAAI,IAAI,CAACA,IAAI,CAACc,KAAK,EAAE;QACxBC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAC9C;MACF;MACA,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUnB,IAAI,CAACc,KAAK;QACrC;MACF,CAAC;MACD,MAAM;QAAEM;MAAK,CAAC,GAAG,MAAMlD,KAAK,CAACmD,GAAG,CAAC,WAAW,EAAEJ,MAAM,CAAC;;MAErD;MACA;MACA;MACA;MACA;MACAf,QAAQ,CAACkB,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CV,KAAK,CAAC;QACJW,KAAK,EAAE,gBAAgB;QACvBC,WAAW,EAAE,0BAA0B;QACvCC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,IAAI;QAChBC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,SAAS;MACR;MACA;IAAA;EAEJ,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAClCtB,eAAe,CAACsB,IAAI,CAAC;IACrBxB,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMyB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACrB,iBAAiB,EAAE;;IAExB;IACA,MAAMsB,QAAQ,GAAG,CAAC,GAAG/B,KAAK,CAAC;IAC3B+B,QAAQ,CAACC,MAAM,CAACvB,iBAAiB,CAACwB,KAAK,EAAE,CAAC,EAAExB,iBAAiB,CAACoB,IAAI,CAAC;IACnE5B,QAAQ,CAAC8B,QAAQ,CAAC;;IAElB;IACArB,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMwB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAAC5B,YAAY,EAAE;;IAEnB;IACA,MAAM6B,UAAU,GAAG7B,YAAY;IAC/B,MAAM8B,SAAS,GAAGpC,KAAK,CAACqC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKjC,YAAY,CAACiC,GAAG,CAAC;IACpE7B,oBAAoB,CAAC;MAAEmB,IAAI,EAAEM,UAAU;MAAEF,KAAK,EAAEG;IAAU,CAAC,CAAC;;IAE5D;IACA;;IAEA,IAAI,CAAAvC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE0C,GAAG,MAAKjC,YAAY,CAACiC,GAAG,EAAE;MAC1CzC,eAAe,CAAC,IAAI,CAAC;IACvB;;IAEA;IACAa,KAAK,CAAC;MACJW,KAAK,EAAE,cAAc;MACrBC,WAAW,eACTnC,OAAA,CAACZ,GAAG;QAAAgE,QAAA,gBACFpD,OAAA,CAACR,IAAI;UAAC6D,EAAE,EAAE,CAAE;UAAAD,QAAA,EAAC;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzCzD,OAAA,CAACX,MAAM;UACLqE,IAAI,EAAC,IAAI;UACTC,WAAW,EAAC,MAAM;UAClBC,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAAC,CAAE;UAAAU,QAAA,EACnC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;MACDrB,MAAM,EAAE,SAAS;MACjBC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE;IACZ,CAAC,CAAC;;IAEF;IACA,MAAMsB,SAAS,GAAGC,UAAU,CAAC,YAAY;MACvC,IAAIzC,iBAAiB,EAAE;QACrB,IAAI;UACF,MAAMO,MAAM,GAAG;YACbC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClCC,aAAa,EAAE,UAAUnB,IAAI,CAACc,KAAK;YACrC;UACF,CAAC;UAED,MAAM5C,KAAK,CAACkF,MAAM,CAAC,kBAAkB,EAAE;YACrClC,OAAO,EAAED,MAAM,CAACC,OAAO;YACvBE,IAAI,EAAE;cAAEiC,MAAM,EAAEjB,UAAU,CAACI;YAAI;UACjC,CAAC,CAAC;UAEF7B,oBAAoB,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;UAAA,IAAAgC,eAAA,EAAAC,oBAAA;UACd;UACAxB,gBAAgB,CAAC,CAAC;UAClBnB,KAAK,CAAC;YACJW,KAAK,EAAE,qBAAqB;YAC5BC,WAAW,EACT,EAAA8B,eAAA,GAAAhC,KAAK,CAACkC,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBlC,IAAI,cAAAmC,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,sBAAsB;YACzDhC,MAAM,EAAE,OAAO;YACfC,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE,IAAI;YAChBC,QAAQ,EAAE;UACZ,CAAC,CAAC;QACJ;MACF;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEVtB,oBAAoB,CAAC,KAAK,CAAC;IAC3BE,eAAe,CAAC,IAAI,CAAC;;IAErB;IACA,OAAO,MAAMkD,YAAY,CAACR,SAAS,CAAC;EACtC,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEApF,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACAsC,YAAY,CAAC,IAAI,CAAC;IAClBS,UAAU,CAAC,CAAC,CACT8C,IAAI,CAAC,MAAM;MACVvD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDwD,KAAK,CAAEtC,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7ClB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACJ,IAAI,EAAEF,YAAY,CAAC,CAAC,CAAC,CAAC;;EAE1B;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAM+D,gBAAgB,GAAI/B,IAAI,IAAK;IACjC;IACA/B,eAAe,CAAC+B,IAAI,CAAC;EACvB,CAAC;EAED,oBACEzC,OAAA,CAACZ,GAAG;IACFqF,OAAO,EAAE;MAAEC,IAAI,EAAEjE,YAAY,GAAG,MAAM,GAAG,MAAM;MAAEkE,EAAE,EAAE;IAAO,CAAE;IAC9DC,OAAO,EAAC,QAAQ;IAChBC,UAAU,EAAC,QAAQ;IACnBC,CAAC,EAAE,CAAE;IACLC,EAAE,EAAC,OAAO;IACVC,CAAC,EAAE;MAAEN,IAAI,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAM,CAAE;IAC/BM,YAAY,EAAC,IAAI;IACjBC,WAAW,EAAE,KAAM;IAAA9B,QAAA,gBAGnBpD,OAAA,CAACZ,GAAG;MACF+F,EAAE,EAAE,CAAE;MACNC,EAAE,EAAE,CAAE;MACNC,QAAQ,EAAE;QAAEX,IAAI,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAO,CAAE;MACvCW,UAAU,EAAC,WAAW;MACtBb,OAAO,EAAC,MAAM;MACdO,CAAC,EAAC,MAAM;MACRO,cAAc,EAAC,eAAe;MAC9BV,UAAU,EAAC,QAAQ;MAAAzB,QAAA,GACpB,UAEC,eAAApD,OAAA,CAACF,cAAc;QAAAsD,QAAA,eACbpD,OAAA,CAACX,MAAM;UACLoF,OAAO,EAAC,MAAM;UACdY,QAAQ,EAAE;YAAEX,IAAI,EAAE,MAAM;YAAEC,EAAE,EAAE,MAAM;YAAEa,EAAE,EAAE;UAAO;UACjD;UAAA;UACAC,GAAG,EAAE,GAAI;UAAArC,QAAA,gBAETpD,OAAA,CAACR,IAAI;YAACqF,UAAU,EAAC,QAAQ;YAACnB,IAAI,EAAE,MAAO;YAACgC,UAAU,EAAE,GAAI;YAAAtC,QAAA,EAAC;UAEzD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPzD,OAAA,CAACN,OAAO;YAAC2F,QAAQ,EAAC;UAAM;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eAENzD,OAAA,CAACZ,GAAG;MACFqF,OAAO,EAAC,MAAM;MACdG,OAAO,EAAC,QAAQ;MAChBE,CAAC,EAAE,CAAE;MACLC,EAAE,EAAC,SAAS;MACZC,CAAC,EAAC,MAAM;MACRW,CAAC,EAAC,MAAM;MACRV,YAAY,EAAC,IAAI;MACjBW,SAAS,EAAC,QAAQ;MAAAxC,QAAA,EAGjBtC,SAAS,gBACRd,OAAA,CAACZ,GAAG;QACFqF,OAAO,EAAC,MAAM;QACdoB,aAAa,EAAC,QAAQ;QACtBhB,UAAU,EAAC,QAAQ;QACnBU,cAAc,EAAC,QAAQ;QACvBE,GAAG,EAAE,CAAE;QACPX,CAAC,EAAE,CAAE;QACLC,EAAE,EAAC,OAAO;QACVE,YAAY,EAAC,IAAI;QACjBa,MAAM,EAAC,IAAI;QACXC,IAAI,EAAC,OAAO;QAAA3C,QAAA,gBAEZpD,OAAA;UACEgG,SAAS,EAAC,mCAAmC;UAC7CC,KAAK,EAAE;YACLZ,QAAQ,EAAE,MAAM;YAChBa,KAAK,EAAE,SAAS;YAChBC,iBAAiB,EAAE;UACrB;QAAE;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFzD,OAAA,CAACR,IAAI;UAAC0G,KAAK,EAAC,UAAU;UAACb,QAAQ,EAAC,IAAI;UAACe,UAAU,EAAC,UAAU;UAAAhD,QAAA,EAAC;QAE3D;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;MACJ;MACJ,CAAA7C,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEyF,MAAM,IAAG,CAAC,gBACfrG,OAAA,CAACT,KAAK;QAACqG,SAAS,EAAC,QAAQ;QAAAxC,QAAA,EACtBxC,KAAK,CAAC0F,GAAG,CAAC,CAAC7D,IAAI,EAAEI,KAAK,kBACrB7C,OAAA,CAACZ,GAAG;UACFwE,OAAO,EAAEA,CAAA,KAAMY,gBAAgB,CAAC/B,IAAI,CAAE;UACtC8D,MAAM,EAAC;UACP;UAAA;UACAxB,EAAE,EAAE,CAAAtE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE0C,GAAG,MAAKV,IAAI,CAACU,GAAG,GAAG,SAAS,GAAG,SAAU;UAC3D+C,KAAK,EAAE,CAAAzF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE0C,GAAG,MAAKV,IAAI,CAACU,GAAG,GAAG,OAAO,GAAG,OAAQ;UAC1DiC,EAAE,EAAE,CAAE;UACNoB,EAAE,EAAE,CAAE;UACNvB,YAAY,EAAC,IAAI;UAEjB;UACA1C,QAAQ,EAAC,UAAU;UACnBkC,OAAO,EAAC,MAAM;UACdI,UAAU,EAAC,QAAQ;UACnBU,cAAc,EAAC,eAAe;UAC9BkB,MAAM,EAAE;YACN,kBAAkB,EAAE;cAClBC,OAAO,EAAE;YACX;UACF,CAAE;UAAAtD,QAAA,gBAGFpD,OAAA,CAACR,IAAI;YAAA4D,QAAA,EACF,CAACX,IAAI,CAACkE,WAAW,IAAIxG,UAAU,IAAIsC,IAAI,CAACmE,KAAK,GAC1C/G,SAAS,CAACM,UAAU,EAAEsC,IAAI,CAACmE,KAAK,CAAC,GACjCnE,IAAI,CAACoE,QAAQ,IAAI;UAAc;YAAAvD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eAEPzD,OAAA,CAACX,MAAM;YACL2G,SAAS,EAAC,eAAe;YACzBU,OAAO,EAAE,CAAE;YACXI,UAAU,EAAC,cAAc;YACzBpD,IAAI,EAAC,IAAI;YACTC,WAAW,EAAC,KAAK;YACjBC,OAAO,EAAGmD,CAAC,IAAK;cACdA,CAAC,CAACC,eAAe,CAAC,CAAC;cACnBxE,iBAAiB,CAACC,IAAI,CAAC;YACzB,CAAE;YACFwE,EAAE,EAAE,CAAE,CAAC;YAAA;YAAA7D,QAAA,eAEPpD,OAAA,CAACL,SAAS;cAACuH,OAAO,EAAC;YAAG;cAAA5D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eAETzD,OAAA,CAAClB,WAAW;YACVqI,MAAM,EAAEnG,iBAAkB;YAC1BoG,mBAAmB,EAAEhG,SAAU;YAC/BiG,OAAO,EAAEA,CAAA,KAAMpG,oBAAoB,CAAC,KAAK,CAAE;YAAAmC,QAAA,eAE3CpD,OAAA,CAACb,kBAAkB;cAAAiE,QAAA,eACjBpD,OAAA,CAAChB,kBAAkB;gBAAAoE,QAAA,gBACjBpD,OAAA,CAACd,iBAAiB;kBAACmG,QAAQ,EAAC,IAAI;kBAACe,UAAU,EAAC,MAAM;kBAAAhD,QAAA,EAAC;gBAEnD;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAmB,CAAC,eAEpBzD,OAAA,CAACjB,eAAe;kBAAAqE,QAAA,EAAC;gBAEjB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAiB,CAAC,eAElBzD,OAAA,CAACf,iBAAiB;kBAAAmE,QAAA,gBAChBpD,OAAA,CAACX,MAAM;oBACLiI,GAAG,EAAElG,SAAU;oBACfwC,OAAO,EAAEA,CAAA,KAAM3C,oBAAoB,CAAC,KAAK,CAAE;oBAAAmC,QAAA,EAC5C;kBAED;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTzD,OAAA,CAACX,MAAM;oBACLsE,WAAW,EAAC,KAAK;oBACjBC,OAAO,EAAEd,mBAAoB;oBAC7BmE,EAAE,EAAE,CAAE;oBAAA7D,QAAA,EACP;kBAED;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA,GAlET,GAAGhB,IAAI,CAACU,GAAG,IAAIN,KAAK,EAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmExB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;MAAA;MAER;MACAzD,OAAA,CAACR,IAAI;QAAC+H,SAAS,EAAC,QAAQ;QAACrB,KAAK,EAAC,UAAU;QAAA9C,QAAA,EAAC;MAE1C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvD,EAAA,CAzbID,OAAO;EAAA,QAiBGR,QAAQ;AAAA;AAAA+H,EAAA,GAjBlBvH,OAAO;AA2bb,eAAeA,OAAO;AACtB;AACA;AAAA,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}