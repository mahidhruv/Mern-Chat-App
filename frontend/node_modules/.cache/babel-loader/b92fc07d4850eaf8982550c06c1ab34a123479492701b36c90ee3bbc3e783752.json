{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst Chatpage = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  // const fetchChats = async () => {\n  //   const response = await axios.get(\"/api/chats\");\n  //   setChats(response.data.data);\n  //   console.log(\"API response:\", response.data); // Log the entire response\n  // };\n  const fetchChats = async () => {\n    try {\n      const response = await axios.get(\"/api/chats\");\n      console.log(\"API response:\", response.data); // Log the entire response\n      if (Array.isArray(response.data.data)) {\n        setChats(response.data.data);\n      } else {\n        console.error(\"Received data is not an array:\", response.data.data);\n        setChats([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching chats:\", error);\n      setChats([]);\n    }\n  };\n  useEffect(() => {\n    fetchChats();\n  }, []);\n\n  // return (\n  //   <div>\n  //     {chats.map((chat) => (\n  //       <div key={chat._id}>{chat.chatName}</div>\n  //     ))}\n  //   </div>\n  // );\n  //   return (\n  //     <div>\n  //       {chats && chats.length > 0 ? (\n  //         chats.map((chat, index) => (\n  //           <div key={chat._id || index}>\n  //             {chat.chatName || chat.name || \"Unnamed Chat\"}\n  //           </div>\n  //         ))\n  //       ) : (\n  //         <p>No chats available</p>\n  //       )}\n  //     </div>\n  //   );\n};\n_s(Chatpage, \"vytB8QcpLWFeZXbb4G/4rqAt8MY=\");\n_c = Chatpage;\nexport default Chatpage;\nvar _c;\n$RefreshReg$(_c, \"Chatpage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Chatpage","_s","chats","setChats","fetchChats","response","get","console","log","data","Array","isArray","error","_c","$RefreshReg$"],"sources":["E:/Programming/VS Code Work/MERN Chat App/frontend/src/Pages/Chatpage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Chatpage = () => {\r\n  const [chats, setChats] = useState([]);\r\n    // const fetchChats = async () => {\r\n    //   const response = await axios.get(\"/api/chats\");\r\n    //   setChats(response.data.data);\r\n    //   console.log(\"API response:\", response.data); // Log the entire response\r\n    // };\r\n  const fetchChats = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/chats\");\r\n      console.log(\"API response:\", response.data); // Log the entire response\r\n      if (Array.isArray(response.data.data)) {\r\n        setChats(response.data.data);\r\n      } else {\r\n        console.error(\"Received data is not an array:\", response.data.data);\r\n        setChats([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching chats:\", error);\r\n      setChats([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, []);\r\n\r\n    // return (\r\n    //   <div>\r\n    //     {chats.map((chat) => (\r\n    //       <div key={chat._id}>{chat.chatName}</div>\r\n    //     ))}\r\n    //   </div>\r\n    // );\r\n//   return (\r\n//     <div>\r\n//       {chats && chats.length > 0 ? (\r\n//         chats.map((chat, index) => (\r\n//           <div key={chat._id || index}>\r\n//             {chat.chatName || chat.name || \"Unnamed Chat\"}\r\n//           </div>\r\n//         ))\r\n//       ) : (\r\n//         <p>No chats available</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n};\r\n\r\nexport default Chatpage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA;EACA;EACA;EACA;EACF,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,YAAY,CAAC;MAC9CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC7C,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,EAAE;QACrCN,QAAQ,CAACE,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;MAC9B,CAAC,MAAM;QACLF,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEP,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;QACnEN,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CT,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAEDN,SAAS,CAAC,MAAM;IACdO,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC;AAACH,EAAA,CA/CID,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}